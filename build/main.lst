ARM GAS  /tmp/ccfsBKE6.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.RGB_LED_Init,"ax",%progbits
  21              		.align	1
  22              		.global	RGB_LED_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	RGB_LED_Init:
  28              	.LFB139:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "i2s.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdarg.h>
  30:Core/Src/main.c **** #include <string.h>
ARM GAS  /tmp/ccfsBKE6.s 			page 2


  31:Core/Src/main.c **** #include <stdio.h>
  32:Core/Src/main.c **** #include "vcnl4040_sensor.h"
  33:Core/Src/main.c **** #include "ens160_sensor.h"
  34:Core/Src/main.c **** #include "humidity_temp_sensor.h"
  35:Core/Src/main.c **** #include "microphone_sensor.h"
  36:Core/Src/main.c **** #include <stdlib.h>
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END Includes */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PTD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** extern I2C_HandleTypeDef hi2c2;
  60:Core/Src/main.c **** extern I2S_HandleTypeDef hi2s1;  // 例如使用 I2S1
  61:Core/Src/main.c **** extern UART_HandleTypeDef huart1; 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** VCNL4040_HandleTypeDef vcnl4040;
  70:Core/Src/main.c **** ENS160_HandleTypeDef ens160;
  71:Core/Src/main.c **** HDC302x_HandleTypeDef hdc1, hdc2, hdc3, hdc4;
  72:Core/Src/main.c **** MIC_HandleTypeDef mic;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/main.c **** void SystemClock_Config(void);
  79:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** void RGB_LED_Init(void);
  82:Core/Src/main.c **** void RGB_LED_Blink(void);
  83:Core/Src/main.c **** void Debug_Print(const char *format, ...);
  84:Core/Src/main.c **** void Debug_Print_DMA(const char *format, ...);
  85:Core/Src/main.c **** void I2C_Scan(void);
  86:Core/Src/main.c **** void Send_Raw_Bytes(uint16_t data);
  87:Core/Src/main.c **** void Send_Buffer_Bytes(uint16_t *buffer, uint16_t count);
ARM GAS  /tmp/ccfsBKE6.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END PFP */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  96:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* USER CODE END 0 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /**
 101:Core/Src/main.c ****   * @brief  The application entry point.
 102:Core/Src/main.c ****   * @retval int
 103:Core/Src/main.c ****   */
 104:Core/Src/main.c **** int main(void)
 105:Core/Src/main.c **** {
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Core/Src/main.c ****   HAL_Init();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Configure the system clock */
 121:Core/Src/main.c ****   SystemClock_Config();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Initialize all configured peripherals */
 129:Core/Src/main.c ****   MX_GPIO_Init();
 130:Core/Src/main.c ****   MX_DMA_Init();
 131:Core/Src/main.c ****   MX_I2C1_Init();
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 133:Core/Src/main.c ****   MX_I2S1_Init();
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 135:Core/Src/main.c ****   RGB_LED_Init();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   VCNL4040_Init(&vcnl4040, &hi2c1, VCNL4040_I2C_ADDR_8BIT);
 138:Core/Src/main.c ****   ENS160_Init(&ens160,&hi2c1, ENS160_I2C_ADDR_LOW);
 139:Core/Src/main.c ****   HDC302x_Init(&hdc1, &hi2c1, HDC302x_ADDR_44);
 140:Core/Src/main.c ****   HDC302x_Init(&hdc2, &hi2c1, HDC302x_ADDR_45);
 141:Core/Src/main.c ****   HDC302x_Init(&hdc3, &hi2c1, HDC302x_ADDR_46);
 142:Core/Src/main.c ****   HDC302x_Init(&hdc4, &hi2c1, HDC302x_ADDR_47);
 143:Core/Src/main.c ****   MIC_Init(&mic, &hi2s1);
 144:Core/Src/main.c ****   MIC_Start(&mic);
ARM GAS  /tmp/ccfsBKE6.s 			page 4


 145:Core/Src/main.c ****  
 146:Core/Src/main.c ****   /* USER CODE END 2 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Infinite loop */
 149:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     /* USER CODE END WHILE */
 154:Core/Src/main.c ****     // Debug_Print("%d\n",audio_result);
 155:Core/Src/main.c ****     // HAL_Delay(10);
 156:Core/Src/main.c ****     RGB_LED_Blink();
 157:Core/Src/main.c ****     Debug_Print("%d\n", mic.audio_result);
 158:Core/Src/main.c ****     
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 180:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccfsBKE6.s 			page 5


 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 212:Core/Src/main.c **** void RGB_LED_Init(void)
 213:Core/Src/main.c **** {
  29              		.loc 1 213 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 40
 214:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 214 5 view .LVU1
  44              		.loc 1 214 22 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0194     		str	r4, [sp, #4]
  47 0008 0294     		str	r4, [sp, #8]
  48 000a 0394     		str	r4, [sp, #12]
  49 000c 0494     		str	r4, [sp, #16]
  50 000e 0594     		str	r4, [sp, #20]
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****     // Enable GPIOC clock
 217:Core/Src/main.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 217 5 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 217 5 view .LVU4
  54 0010 0094     		str	r4, [sp]
  55              		.loc 1 217 5 view .LVU5
  56 0012 0D4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F00402 		orr	r2, r2, #4
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 217 5 view .LVU6
  61 001c 1B6B     		ldr	r3, [r3, #48]
  62 001e 03F00403 		and	r3, r3, #4
  63 0022 0093     		str	r3, [sp]
  64              		.loc 1 217 5 view .LVU7
  65 0024 009B     		ldr	r3, [sp]
  66              	.LBE4:
  67              		.loc 1 217 5 view .LVU8
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     // Configure PC0, PC1, PC2 as output pins
ARM GAS  /tmp/ccfsBKE6.s 			page 6


 220:Core/Src/main.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2;
  68              		.loc 1 220 5 view .LVU9
  69              		.loc 1 220 25 is_stmt 0 view .LVU10
  70 0026 0726     		movs	r6, #7
  71 0028 0196     		str	r6, [sp, #4]
 221:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  72              		.loc 1 221 5 is_stmt 1 view .LVU11
  73              		.loc 1 221 26 is_stmt 0 view .LVU12
  74 002a 0123     		movs	r3, #1
  75 002c 0293     		str	r3, [sp, #8]
 222:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  76              		.loc 1 222 5 is_stmt 1 view .LVU13
 223:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  77              		.loc 1 223 5 view .LVU14
 224:Core/Src/main.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  78              		.loc 1 224 5 view .LVU15
  79 002e 074D     		ldr	r5, .L3+4
  80 0030 01A9     		add	r1, sp, #4
  81 0032 2846     		mov	r0, r5
  82 0034 FFF7FEFF 		bl	HAL_GPIO_Init
  83              	.LVL0:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     // Turn off all LEDs initially
 227:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2, GPIO_PIN_RESET);
  84              		.loc 1 227 5 view .LVU16
  85 0038 2246     		mov	r2, r4
  86 003a 3146     		mov	r1, r6
  87 003c 2846     		mov	r0, r5
  88 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL1:
 228:Core/Src/main.c **** }
  90              		.loc 1 228 1 is_stmt 0 view .LVU17
  91 0042 06B0     		add	sp, sp, #24
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 16
  94              		@ sp needed
  95 0044 70BD     		pop	{r4, r5, r6, pc}
  96              	.L4:
  97 0046 00BF     		.align	2
  98              	.L3:
  99 0048 00380240 		.word	1073887232
 100 004c 00080240 		.word	1073874944
 101              		.cfi_endproc
 102              	.LFE139:
 104              		.section	.text.RGB_LED_Blink,"ax",%progbits
 105              		.align	1
 106              		.global	RGB_LED_Blink
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	RGB_LED_Blink:
 112              	.LFB140:
 229:Core/Src/main.c **** void RGB_LED_Blink(void)
 230:Core/Src/main.c **** {
 113              		.loc 1 230 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccfsBKE6.s 			page 7


 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI3:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 231:Core/Src/main.c ****     // Red
 232:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_SET);
 122              		.loc 1 232 5 view .LVU19
 123 0002 144C     		ldr	r4, .L7
 124 0004 0122     		movs	r2, #1
 125 0006 1146     		mov	r1, r2
 126 0008 2046     		mov	r0, r4
 127 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL2:
 233:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1 | GPIO_PIN_2, GPIO_PIN_RESET);
 129              		.loc 1 233 5 view .LVU20
 130 000e 0022     		movs	r2, #0
 131 0010 0621     		movs	r1, #6
 132 0012 2046     		mov	r0, r4
 133 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 134              	.LVL3:
 234:Core/Src/main.c ****     HAL_Delay(5);
 135              		.loc 1 234 5 view .LVU21
 136 0018 0520     		movs	r0, #5
 137 001a FFF7FEFF 		bl	HAL_Delay
 138              	.LVL4:
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****     // Green
 237:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 139              		.loc 1 237 5 view .LVU22
 140 001e 0122     		movs	r2, #1
 141 0020 0221     		movs	r1, #2
 142 0022 2046     		mov	r0, r4
 143 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 144              	.LVL5:
 238:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0 | GPIO_PIN_2, GPIO_PIN_RESET);
 145              		.loc 1 238 5 view .LVU23
 146 0028 0022     		movs	r2, #0
 147 002a 0521     		movs	r1, #5
 148 002c 2046     		mov	r0, r4
 149 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 150              	.LVL6:
 239:Core/Src/main.c ****     HAL_Delay(5);
 151              		.loc 1 239 5 view .LVU24
 152 0032 0520     		movs	r0, #5
 153 0034 FFF7FEFF 		bl	HAL_Delay
 154              	.LVL7:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****     // Blue
 242:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 155              		.loc 1 242 5 view .LVU25
 156 0038 0122     		movs	r2, #1
 157 003a 0421     		movs	r1, #4
 158 003c 2046     		mov	r0, r4
 159 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL8:
ARM GAS  /tmp/ccfsBKE6.s 			page 8


 243:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 161              		.loc 1 243 5 view .LVU26
 162 0042 0022     		movs	r2, #0
 163 0044 0321     		movs	r1, #3
 164 0046 2046     		mov	r0, r4
 165 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL9:
 244:Core/Src/main.c ****     HAL_Delay(5);
 167              		.loc 1 244 5 view .LVU27
 168 004c 0520     		movs	r0, #5
 169 004e FFF7FEFF 		bl	HAL_Delay
 170              	.LVL10:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     // // White (all on)
 247:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2, GPIO_PIN_SET);
 248:Core/Src/main.c ****     // HAL_Delay(200);
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****     // // Off
 251:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2, GPIO_PIN_RESET);
 252:Core/Src/main.c ****     // HAL_Delay(200);
 253:Core/Src/main.c **** }
 171              		.loc 1 253 1 is_stmt 0 view .LVU28
 172 0052 10BD     		pop	{r4, pc}
 173              	.L8:
 174              		.align	2
 175              	.L7:
 176 0054 00080240 		.word	1073874944
 177              		.cfi_endproc
 178              	.LFE140:
 180              		.section	.text.Debug_Print,"ax",%progbits
 181              		.align	1
 182              		.global	Debug_Print
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	Debug_Print:
 188              	.LVL11:
 189              	.LFB141:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void Debug_Print(const char *format, ...)
 257:Core/Src/main.c **** {
 190              		.loc 1 257 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 4, pretend = 16, frame = 136
 193              		@ frame_needed = 0, uses_anonymous_args = 1
 194              		.loc 1 257 1 is_stmt 0 view .LVU30
 195 0000 0FB4     		push	{r0, r1, r2, r3}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 16
 198              		.cfi_offset 0, -16
 199              		.cfi_offset 1, -12
 200              		.cfi_offset 2, -8
 201              		.cfi_offset 3, -4
 202 0002 00B5     		push	{lr}
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccfsBKE6.s 			page 9


 205              		.cfi_offset 14, -20
 206 0004 A3B0     		sub	sp, sp, #140
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 160
 209 0006 24AB     		add	r3, sp, #144
 210 0008 53F8042B 		ldr	r2, [r3], #4
 258:Core/Src/main.c ****     char buffer[128];
 211              		.loc 1 258 5 is_stmt 1 view .LVU31
 259:Core/Src/main.c ****     va_list args;
 212              		.loc 1 259 5 view .LVU32
 260:Core/Src/main.c ****     va_start(args, format);
 213              		.loc 1 260 5 view .LVU33
 214 000c 0193     		str	r3, [sp, #4]
 261:Core/Src/main.c ****     vsnprintf(buffer, sizeof(buffer), format, args);
 215              		.loc 1 261 5 view .LVU34
 216 000e 8021     		movs	r1, #128
 217 0010 02A8     		add	r0, sp, #8
 218 0012 FFF7FEFF 		bl	vsnprintf
 219              	.LVL12:
 262:Core/Src/main.c ****     va_end(args);
 220              		.loc 1 262 5 view .LVU35
 263:Core/Src/main.c ****     // 发送格式化的字符串通过UART
 264:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t *)buffer, strlen(buffer), 100);
 221              		.loc 1 264 5 view .LVU36
 222              		.loc 1 264 51 is_stmt 0 view .LVU37
 223 0016 02A8     		add	r0, sp, #8
 224 0018 FFF7FEFF 		bl	strlen
 225              	.LVL13:
 226              		.loc 1 264 5 discriminator 1 view .LVU38
 227 001c 6423     		movs	r3, #100
 228 001e 82B2     		uxth	r2, r0
 229 0020 02A9     		add	r1, sp, #8
 230 0022 0448     		ldr	r0, .L11
 231 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 232              	.LVL14:
 265:Core/Src/main.c **** }
 233              		.loc 1 265 1 view .LVU39
 234 0028 23B0     		add	sp, sp, #140
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 20
 237              		@ sp needed
 238 002a 5DF804EB 		ldr	lr, [sp], #4
 239              	.LCFI8:
 240              		.cfi_restore 14
 241              		.cfi_def_cfa_offset 16
 242 002e 04B0     		add	sp, sp, #16
 243              	.LCFI9:
 244              		.cfi_restore 3
 245              		.cfi_restore 2
 246              		.cfi_restore 1
 247              		.cfi_restore 0
 248              		.cfi_def_cfa_offset 0
 249 0030 7047     		bx	lr
 250              	.L12:
 251 0032 00BF     		.align	2
 252              	.L11:
 253 0034 00000000 		.word	huart1
ARM GAS  /tmp/ccfsBKE6.s 			page 10


 254              		.cfi_endproc
 255              	.LFE141:
 257              		.section	.text.Debug_Print_DMA,"ax",%progbits
 258              		.align	1
 259              		.global	Debug_Print_DMA
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	Debug_Print_DMA:
 265              	.LVL15:
 266              	.LFB142:
 266:Core/Src/main.c **** void Debug_Print_DMA(const char *format, ...)
 267:Core/Src/main.c **** {
 267              		.loc 1 267 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 4, pretend = 16, frame = 136
 270              		@ frame_needed = 0, uses_anonymous_args = 1
 271              		.loc 1 267 1 is_stmt 0 view .LVU41
 272 0000 0FB4     		push	{r0, r1, r2, r3}
 273              	.LCFI10:
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 0, -16
 276              		.cfi_offset 1, -12
 277              		.cfi_offset 2, -8
 278              		.cfi_offset 3, -4
 279 0002 00B5     		push	{lr}
 280              	.LCFI11:
 281              		.cfi_def_cfa_offset 20
 282              		.cfi_offset 14, -20
 283 0004 A3B0     		sub	sp, sp, #140
 284              	.LCFI12:
 285              		.cfi_def_cfa_offset 160
 286 0006 24AB     		add	r3, sp, #144
 287 0008 53F8042B 		ldr	r2, [r3], #4
 268:Core/Src/main.c ****     va_list args;
 288              		.loc 1 268 5 is_stmt 1 view .LVU42
 269:Core/Src/main.c ****     va_start(args, format);
 289              		.loc 1 269 5 view .LVU43
 290 000c 2193     		str	r3, [sp, #132]
 270:Core/Src/main.c ****     
 271:Core/Src/main.c ****     // 格式化字符串到临时缓冲区
 272:Core/Src/main.c ****     char buffer[128];
 291              		.loc 1 272 5 view .LVU44
 273:Core/Src/main.c ****     vsnprintf(buffer, sizeof(buffer), format, args);
 292              		.loc 1 273 5 view .LVU45
 293 000e 8021     		movs	r1, #128
 294 0010 01A8     		add	r0, sp, #4
 295 0012 FFF7FEFF 		bl	vsnprintf
 296              	.LVL16:
 274:Core/Src/main.c ****     va_end(args);
 297              		.loc 1 274 5 view .LVU46
 275:Core/Src/main.c ****     
 276:Core/Src/main.c ****     // 使用 DMA 发送数据
 277:Core/Src/main.c ****     HAL_UART_Transmit_DMA(&huart1, (uint8_t*)buffer, strlen(buffer));
 298              		.loc 1 277 5 view .LVU47
 299              		.loc 1 277 54 is_stmt 0 view .LVU48
 300 0016 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccfsBKE6.s 			page 11


 301 0018 FFF7FEFF 		bl	strlen
 302              	.LVL17:
 303              		.loc 1 277 5 discriminator 1 view .LVU49
 304 001c 82B2     		uxth	r2, r0
 305 001e 01A9     		add	r1, sp, #4
 306 0020 0348     		ldr	r0, .L15
 307 0022 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 308              	.LVL18:
 278:Core/Src/main.c **** }
 309              		.loc 1 278 1 view .LVU50
 310 0026 23B0     		add	sp, sp, #140
 311              	.LCFI13:
 312              		.cfi_def_cfa_offset 20
 313              		@ sp needed
 314 0028 5DF804EB 		ldr	lr, [sp], #4
 315              	.LCFI14:
 316              		.cfi_restore 14
 317              		.cfi_def_cfa_offset 16
 318 002c 04B0     		add	sp, sp, #16
 319              	.LCFI15:
 320              		.cfi_restore 3
 321              		.cfi_restore 2
 322              		.cfi_restore 1
 323              		.cfi_restore 0
 324              		.cfi_def_cfa_offset 0
 325 002e 7047     		bx	lr
 326              	.L16:
 327              		.align	2
 328              	.L15:
 329 0030 00000000 		.word	huart1
 330              		.cfi_endproc
 331              	.LFE142:
 333              		.section	.text.Send_Raw_Bytes,"ax",%progbits
 334              		.align	1
 335              		.global	Send_Raw_Bytes
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	Send_Raw_Bytes:
 341              	.LVL19:
 342              	.LFB143:
 279:Core/Src/main.c **** void Send_Raw_Bytes(uint16_t data)
 280:Core/Src/main.c **** {
 343              		.loc 1 280 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 8
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		.loc 1 280 1 is_stmt 0 view .LVU52
 348 0000 00B5     		push	{lr}
 349              	.LCFI16:
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 14, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              	.LCFI17:
 354              		.cfi_def_cfa_offset 16
 281:Core/Src/main.c ****     uint8_t bytes[2];
 355              		.loc 1 281 5 is_stmt 1 view .LVU53
ARM GAS  /tmp/ccfsBKE6.s 			page 12


 282:Core/Src/main.c ****     
 283:Core/Src/main.c ****     // 将16位数据拆分为2个字节
 284:Core/Src/main.c ****     bytes[0] = (uint8_t)(data & 0xFF);        // 低字节 (LSB)
 356              		.loc 1 284 5 view .LVU54
 357              		.loc 1 284 14 is_stmt 0 view .LVU55
 358 0004 8DF80400 		strb	r0, [sp, #4]
 285:Core/Src/main.c ****     bytes[1] = (uint8_t)((data >> 8) & 0xFF); // 高字节 (MSB)
 359              		.loc 1 285 5 is_stmt 1 view .LVU56
 360              		.loc 1 285 16 is_stmt 0 view .LVU57
 361 0008 000A     		lsrs	r0, r0, #8
 362              	.LVL20:
 363              		.loc 1 285 14 view .LVU58
 364 000a 8DF80500 		strb	r0, [sp, #5]
 286:Core/Src/main.c ****     
 287:Core/Src/main.c ****     // 发送字节数据
 288:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, bytes, 2, HAL_MAX_DELAY);
 365              		.loc 1 288 5 is_stmt 1 view .LVU59
 366 000e 4FF0FF33 		mov	r3, #-1
 367 0012 0222     		movs	r2, #2
 368 0014 01A9     		add	r1, sp, #4
 369 0016 0348     		ldr	r0, .L19
 370 0018 FFF7FEFF 		bl	HAL_UART_Transmit
 371              	.LVL21:
 289:Core/Src/main.c **** }
 372              		.loc 1 289 1 is_stmt 0 view .LVU60
 373 001c 03B0     		add	sp, sp, #12
 374              	.LCFI18:
 375              		.cfi_def_cfa_offset 4
 376              		@ sp needed
 377 001e 5DF804FB 		ldr	pc, [sp], #4
 378              	.L20:
 379 0022 00BF     		.align	2
 380              	.L19:
 381 0024 00000000 		.word	huart1
 382              		.cfi_endproc
 383              	.LFE143:
 385              		.section	.text.Send_Buffer_Bytes,"ax",%progbits
 386              		.align	1
 387              		.global	Send_Buffer_Bytes
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	Send_Buffer_Bytes:
 393              	.LVL22:
 394              	.LFB144:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** void Send_Buffer_Bytes(uint16_t *buffer, uint16_t count)
 292:Core/Src/main.c **** {
 395              		.loc 1 292 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 292 1 is_stmt 0 view .LVU62
 400 0000 70B5     		push	{r4, r5, r6, lr}
 401              	.LCFI19:
 402              		.cfi_def_cfa_offset 16
 403              		.cfi_offset 4, -16
ARM GAS  /tmp/ccfsBKE6.s 			page 13


 404              		.cfi_offset 5, -12
 405              		.cfi_offset 6, -8
 406              		.cfi_offset 14, -4
 407 0002 0646     		mov	r6, r0
 408 0004 0D46     		mov	r5, r1
 293:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++)
 409              		.loc 1 293 5 is_stmt 1 view .LVU63
 410              	.LBB5:
 411              		.loc 1 293 10 view .LVU64
 412              	.LVL23:
 413              		.loc 1 293 19 is_stmt 0 view .LVU65
 414 0006 0024     		movs	r4, #0
 415              		.loc 1 293 5 view .LVU66
 416 0008 05E0     		b	.L22
 417              	.LVL24:
 418              	.L23:
 294:Core/Src/main.c ****     {
 295:Core/Src/main.c ****         Send_Raw_Bytes(buffer[i]);
 419              		.loc 1 295 9 is_stmt 1 view .LVU67
 420 000a 36F81400 		ldrh	r0, [r6, r4, lsl #1]
 421 000e FFF7FEFF 		bl	Send_Raw_Bytes
 422              	.LVL25:
 293:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++)
 423              		.loc 1 293 38 discriminator 3 view .LVU68
 424 0012 0134     		adds	r4, r4, #1
 425              	.LVL26:
 293:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++)
 426              		.loc 1 293 38 is_stmt 0 discriminator 3 view .LVU69
 427 0014 A4B2     		uxth	r4, r4
 428              	.LVL27:
 429              	.L22:
 293:Core/Src/main.c ****     for (uint16_t i = 0; i < count; i++)
 430              		.loc 1 293 28 is_stmt 1 discriminator 1 view .LVU70
 431 0016 AC42     		cmp	r4, r5
 432 0018 F7D3     		bcc	.L23
 433              	.LBE5:
 296:Core/Src/main.c ****     }
 297:Core/Src/main.c **** }
 434              		.loc 1 297 1 is_stmt 0 view .LVU71
 435 001a 70BD     		pop	{r4, r5, r6, pc}
 436              		.loc 1 297 1 view .LVU72
 437              		.cfi_endproc
 438              	.LFE144:
 440              		.section	.rodata.I2C_Scan.str1.4,"aMS",%progbits,1
 441              		.align	2
 442              	.LC0:
 443 0000 53746172 		.ascii	"Starting I2C scan...\015\012\000"
 443      74696E67 
 443      20493243 
 443      20736361 
 443      6E2E2E2E 
 444 0017 00       		.align	2
 445              	.LC1:
 446 0018 49324320 		.ascii	"I2C device found at address: 0x%02X\015\012\000"
 446      64657669 
 446      63652066 
 446      6F756E64 
ARM GAS  /tmp/ccfsBKE6.s 			page 14


 446      20617420 
 447 003e 0000     		.align	2
 448              	.LC2:
 449 0040 49324320 		.ascii	"I2C scan complete.\015\012\000"
 449      7363616E 
 449      20636F6D 
 449      706C6574 
 449      652E0D0A 
 450              		.section	.text.I2C_Scan,"ax",%progbits
 451              		.align	1
 452              		.global	I2C_Scan
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	I2C_Scan:
 458              	.LFB145:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** void I2C_Scan(void)
 300:Core/Src/main.c **** {
 459              		.loc 1 300 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI20:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 301:Core/Src/main.c ****     Debug_Print("Starting I2C scan...\r\n");
 468              		.loc 1 301 5 view .LVU74
 469 0002 0E48     		ldr	r0, .L31
 470 0004 FFF7FEFF 		bl	Debug_Print
 471              	.LVL28:
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****     for (uint8_t addr = 0x03; addr <= 0x77; addr++)
 472              		.loc 1 303 5 view .LVU75
 473              	.LBB6:
 474              		.loc 1 303 10 view .LVU76
 475              		.loc 1 303 18 is_stmt 0 view .LVU77
 476 0008 0324     		movs	r4, #3
 477              		.loc 1 303 5 view .LVU78
 478 000a 01E0     		b	.L26
 479              	.LVL29:
 480              	.L27:
 481              		.loc 1 303 49 is_stmt 1 discriminator 2 view .LVU79
 482 000c 0134     		adds	r4, r4, #1
 483              	.LVL30:
 484              		.loc 1 303 49 is_stmt 0 discriminator 2 view .LVU80
 485 000e E4B2     		uxtb	r4, r4
 486              	.LVL31:
 487              	.L26:
 488              		.loc 1 303 36 is_stmt 1 discriminator 1 view .LVU81
 489 0010 772C     		cmp	r4, #119
 490 0012 0ED8     		bhi	.L30
 304:Core/Src/main.c ****     {
 305:Core/Src/main.c ****         // Check if a device responds at this address
 306:Core/Src/main.c ****         if (HAL_I2C_IsDeviceReady(&hi2c1, (addr << 1), 1, HAL_MAX_DELAY) == HAL_OK)
ARM GAS  /tmp/ccfsBKE6.s 			page 15


 491              		.loc 1 306 9 view .LVU82
 492              		.loc 1 306 13 is_stmt 0 view .LVU83
 493 0014 4FF0FF33 		mov	r3, #-1
 494 0018 0122     		movs	r2, #1
 495 001a 04FA02F1 		lsl	r1, r4, r2
 496 001e 0848     		ldr	r0, .L31+4
 497 0020 FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
 498              	.LVL32:
 499              		.loc 1 306 12 discriminator 1 view .LVU84
 500 0024 0028     		cmp	r0, #0
 501 0026 F1D1     		bne	.L27
 307:Core/Src/main.c ****         {
 308:Core/Src/main.c ****             Debug_Print("I2C device found at address: 0x%02X\r\n", addr);
 502              		.loc 1 308 13 is_stmt 1 view .LVU85
 503 0028 2146     		mov	r1, r4
 504 002a 0648     		ldr	r0, .L31+8
 505 002c FFF7FEFF 		bl	Debug_Print
 506              	.LVL33:
 507 0030 ECE7     		b	.L27
 508              	.L30:
 509              	.LBE6:
 309:Core/Src/main.c ****         }
 310:Core/Src/main.c ****     }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****     Debug_Print("I2C scan complete.\r\n");
 510              		.loc 1 312 5 view .LVU86
 511 0032 0548     		ldr	r0, .L31+12
 512 0034 FFF7FEFF 		bl	Debug_Print
 513              	.LVL34:
 313:Core/Src/main.c **** }
 514              		.loc 1 313 1 is_stmt 0 view .LVU87
 515 0038 10BD     		pop	{r4, pc}
 516              	.LVL35:
 517              	.L32:
 518              		.loc 1 313 1 view .LVU88
 519 003a 00BF     		.align	2
 520              	.L31:
 521 003c 00000000 		.word	.LC0
 522 0040 00000000 		.word	hi2c1
 523 0044 18000000 		.word	.LC1
 524 0048 40000000 		.word	.LC2
 525              		.cfi_endproc
 526              	.LFE145:
 528              		.section	.text.Error_Handler,"ax",%progbits
 529              		.align	1
 530              		.global	Error_Handler
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	Error_Handler:
 536              	.LFB146:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /*
 316:Core/Src/main.c ****     uint8_t aqi;
 317:Core/Src/main.c ****     uint16_t tvoc, eco2;
 318:Core/Src/main.c ****     ENS160_ReadAQI(&ens160, &aqi);
 319:Core/Src/main.c ****     ENS160_ReadTVOC(&ens160, &tvoc);
ARM GAS  /tmp/ccfsBKE6.s 			page 16


 320:Core/Src/main.c ****     ENS160_ReadECO2(&ens160, &eco2);
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****     Debug_Print("%d,%d,%d\n", aqi, tvoc, eco2);
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** float T1, H1, T2, H2, T3, H3, T4, H4;
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****         HTS_ReadData(&hts1, &T1, &H1);
 328:Core/Src/main.c ****         HTS_ReadData(&hts2, &T2, &H2);
 329:Core/Src/main.c ****         HTS_ReadData(&hts3, &T3, &H3);
 330:Core/Src/main.c ****         HTS_ReadData(&hts4, &T4, &H4);
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****         printf("[S1] T=%.2f°C RH=%.1f%% | [S2] T=%.2f°C RH=%.1f%%\r\n", T1, H1, T2, H2);
 333:Core/Src/main.c ****         printf("[S3] T=%.2f°C RH=%.1f%% | [S4] T=%.2f°C RH=%.1f%%\r\n", T3, H3, T4, H4);
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** uint16_t als, ps;
 337:Core/Src/main.c ****         VCNL4040_ReadALS(&vcnl4040, &als);
 338:Core/Src/main.c ****         VCNL4040_ReadPS(&vcnl4040, &ps);
 339:Core/Src/main.c ****         printf("ALS=%u, PS=%u\r\n", als, ps);
 340:Core/Src/main.c ****         HAL_Delay(500);
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c **** /* USER CODE END 4 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** /**
 348:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 349:Core/Src/main.c ****   * @retval None
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c **** void Error_Handler(void)
 352:Core/Src/main.c **** {
 537              		.loc 1 352 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ Volatile: function does not return.
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 353:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 354:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 355:Core/Src/main.c ****   __disable_irq();
 543              		.loc 1 355 3 view .LVU90
 544              	.LBB7:
 545              	.LBI7:
 546              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccfsBKE6.s 			page 17


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccfsBKE6.s 			page 18


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
ARM GAS  /tmp/ccfsBKE6.s 			page 19


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
ARM GAS  /tmp/ccfsBKE6.s 			page 20


 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  /tmp/ccfsBKE6.s 			page 21


 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccfsBKE6.s 			page 22


 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
ARM GAS  /tmp/ccfsBKE6.s 			page 23


 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
ARM GAS  /tmp/ccfsBKE6.s 			page 24


 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccfsBKE6.s 			page 25


 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /tmp/ccfsBKE6.s 			page 26


 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
ARM GAS  /tmp/ccfsBKE6.s 			page 27


 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  /tmp/ccfsBKE6.s 			page 28


 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccfsBKE6.s 			page 29


 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccfsBKE6.s 			page 30


 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
ARM GAS  /tmp/ccfsBKE6.s 			page 31


 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccfsBKE6.s 			page 32


 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccfsBKE6.s 			page 33


 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 547              		.loc 2 960 27 view .LVU91
 548              	.LBB8:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 549              		.loc 2 962 3 view .LVU92
 550              		.syntax unified
 551              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 552 0000 72B6     		cpsid i
 553              	@ 0 "" 2
 554              		.thumb
 555              		.syntax unified
 556              	.L34:
 557              	.LBE8:
 558              	.LBE7:
 356:Core/Src/main.c ****   while (1)
 559              		.loc 1 356 3 view .LVU93
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****   }
 560              		.loc 1 358 3 view .LVU94
 356:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccfsBKE6.s 			page 34


 561              		.loc 1 356 9 view .LVU95
 562 0002 FEE7     		b	.L34
 563              		.cfi_endproc
 564              	.LFE146:
 566              		.section	.text.SystemClock_Config,"ax",%progbits
 567              		.align	1
 568              		.global	SystemClock_Config
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	SystemClock_Config:
 574              	.LFB138:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 575              		.loc 1 170 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 80
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 00B5     		push	{lr}
 580              	.LCFI21:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 14, -4
 583 0002 95B0     		sub	sp, sp, #84
 584              	.LCFI22:
 585              		.cfi_def_cfa_offset 88
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 586              		.loc 1 171 3 view .LVU97
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 587              		.loc 1 171 22 is_stmt 0 view .LVU98
 588 0004 3422     		movs	r2, #52
 589 0006 0021     		movs	r1, #0
 590 0008 07A8     		add	r0, sp, #28
 591 000a FFF7FEFF 		bl	memset
 592              	.LVL36:
 172:Core/Src/main.c **** 
 593              		.loc 1 172 3 is_stmt 1 view .LVU99
 172:Core/Src/main.c **** 
 594              		.loc 1 172 22 is_stmt 0 view .LVU100
 595 000e 0023     		movs	r3, #0
 596 0010 0293     		str	r3, [sp, #8]
 597 0012 0393     		str	r3, [sp, #12]
 598 0014 0493     		str	r3, [sp, #16]
 599 0016 0593     		str	r3, [sp, #20]
 600 0018 0693     		str	r3, [sp, #24]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 601              		.loc 1 176 3 is_stmt 1 view .LVU101
 602              	.LBB9:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 603              		.loc 1 176 3 view .LVU102
 604 001a 0093     		str	r3, [sp]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 605              		.loc 1 176 3 view .LVU103
 606 001c 204A     		ldr	r2, .L41
 607 001e 116C     		ldr	r1, [r2, #64]
 608 0020 41F08051 		orr	r1, r1, #268435456
 609 0024 1164     		str	r1, [r2, #64]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 610              		.loc 1 176 3 view .LVU104
ARM GAS  /tmp/ccfsBKE6.s 			page 35


 611 0026 126C     		ldr	r2, [r2, #64]
 612 0028 02F08052 		and	r2, r2, #268435456
 613 002c 0092     		str	r2, [sp]
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 614              		.loc 1 176 3 view .LVU105
 615 002e 009A     		ldr	r2, [sp]
 616              	.LBE9:
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 617              		.loc 1 176 3 view .LVU106
 177:Core/Src/main.c **** 
 618              		.loc 1 177 3 view .LVU107
 619              	.LBB10:
 177:Core/Src/main.c **** 
 620              		.loc 1 177 3 view .LVU108
 621 0030 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c **** 
 622              		.loc 1 177 3 view .LVU109
 623 0032 1C4B     		ldr	r3, .L41+4
 624 0034 1A68     		ldr	r2, [r3]
 625 0036 42F44042 		orr	r2, r2, #49152
 626 003a 1A60     		str	r2, [r3]
 177:Core/Src/main.c **** 
 627              		.loc 1 177 3 view .LVU110
 628 003c 1B68     		ldr	r3, [r3]
 629 003e 03F44043 		and	r3, r3, #49152
 630 0042 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c **** 
 631              		.loc 1 177 3 view .LVU111
 632 0044 019B     		ldr	r3, [sp, #4]
 633              	.LBE10:
 177:Core/Src/main.c **** 
 634              		.loc 1 177 3 view .LVU112
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 635              		.loc 1 182 3 view .LVU113
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 636              		.loc 1 182 36 is_stmt 0 view .LVU114
 637 0046 0123     		movs	r3, #1
 638 0048 0793     		str	r3, [sp, #28]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 639              		.loc 1 183 3 is_stmt 1 view .LVU115
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 640              		.loc 1 183 30 is_stmt 0 view .LVU116
 641 004a 4FF48033 		mov	r3, #65536
 642 004e 0893     		str	r3, [sp, #32]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 643              		.loc 1 184 3 is_stmt 1 view .LVU117
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 644              		.loc 1 184 34 is_stmt 0 view .LVU118
 645 0050 0223     		movs	r3, #2
 646 0052 0D93     		str	r3, [sp, #52]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 647              		.loc 1 185 3 is_stmt 1 view .LVU119
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 648              		.loc 1 185 35 is_stmt 0 view .LVU120
 649 0054 4FF48002 		mov	r2, #4194304
 650 0058 0E92     		str	r2, [sp, #56]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
ARM GAS  /tmp/ccfsBKE6.s 			page 36


 651              		.loc 1 186 3 is_stmt 1 view .LVU121
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 652              		.loc 1 186 30 is_stmt 0 view .LVU122
 653 005a 0422     		movs	r2, #4
 654 005c 0F92     		str	r2, [sp, #60]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 655              		.loc 1 187 3 is_stmt 1 view .LVU123
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 656              		.loc 1 187 30 is_stmt 0 view .LVU124
 657 005e A822     		movs	r2, #168
 658 0060 1092     		str	r2, [sp, #64]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 659              		.loc 1 188 3 is_stmt 1 view .LVU125
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 660              		.loc 1 188 30 is_stmt 0 view .LVU126
 661 0062 1193     		str	r3, [sp, #68]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 662              		.loc 1 189 3 is_stmt 1 view .LVU127
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 663              		.loc 1 189 30 is_stmt 0 view .LVU128
 664 0064 1293     		str	r3, [sp, #72]
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 665              		.loc 1 190 3 is_stmt 1 view .LVU129
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 666              		.loc 1 190 30 is_stmt 0 view .LVU130
 667 0066 1393     		str	r3, [sp, #76]
 191:Core/Src/main.c ****   {
 668              		.loc 1 191 3 is_stmt 1 view .LVU131
 191:Core/Src/main.c ****   {
 669              		.loc 1 191 7 is_stmt 0 view .LVU132
 670 0068 07A8     		add	r0, sp, #28
 671 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 672              	.LVL37:
 191:Core/Src/main.c ****   {
 673              		.loc 1 191 6 discriminator 1 view .LVU133
 674 006e 98B9     		cbnz	r0, .L39
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 675              		.loc 1 198 3 is_stmt 1 view .LVU134
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 676              		.loc 1 198 31 is_stmt 0 view .LVU135
 677 0070 0F23     		movs	r3, #15
 678 0072 0293     		str	r3, [sp, #8]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 679              		.loc 1 200 3 is_stmt 1 view .LVU136
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 680              		.loc 1 200 34 is_stmt 0 view .LVU137
 681 0074 0223     		movs	r3, #2
 682 0076 0393     		str	r3, [sp, #12]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 683              		.loc 1 201 3 is_stmt 1 view .LVU138
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 684              		.loc 1 201 35 is_stmt 0 view .LVU139
 685 0078 0023     		movs	r3, #0
 686 007a 0493     		str	r3, [sp, #16]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 687              		.loc 1 202 3 is_stmt 1 view .LVU140
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccfsBKE6.s 			page 37


 688              		.loc 1 202 36 is_stmt 0 view .LVU141
 689 007c 4FF4A053 		mov	r3, #5120
 690 0080 0593     		str	r3, [sp, #20]
 203:Core/Src/main.c **** 
 691              		.loc 1 203 3 is_stmt 1 view .LVU142
 203:Core/Src/main.c **** 
 692              		.loc 1 203 36 is_stmt 0 view .LVU143
 693 0082 4FF48053 		mov	r3, #4096
 694 0086 0693     		str	r3, [sp, #24]
 205:Core/Src/main.c ****   {
 695              		.loc 1 205 3 is_stmt 1 view .LVU144
 205:Core/Src/main.c ****   {
 696              		.loc 1 205 7 is_stmt 0 view .LVU145
 697 0088 0521     		movs	r1, #5
 698 008a 02A8     		add	r0, sp, #8
 699 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 700              	.LVL38:
 205:Core/Src/main.c ****   {
 701              		.loc 1 205 6 discriminator 1 view .LVU146
 702 0090 20B9     		cbnz	r0, .L40
 209:Core/Src/main.c **** 
 703              		.loc 1 209 1 view .LVU147
 704 0092 15B0     		add	sp, sp, #84
 705              	.LCFI23:
 706              		.cfi_remember_state
 707              		.cfi_def_cfa_offset 4
 708              		@ sp needed
 709 0094 5DF804FB 		ldr	pc, [sp], #4
 710              	.L39:
 711              	.LCFI24:
 712              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 713              		.loc 1 193 5 is_stmt 1 view .LVU148
 714 0098 FFF7FEFF 		bl	Error_Handler
 715              	.LVL39:
 716              	.L40:
 207:Core/Src/main.c ****   }
 717              		.loc 1 207 5 view .LVU149
 718 009c FFF7FEFF 		bl	Error_Handler
 719              	.LVL40:
 720              	.L42:
 721              		.align	2
 722              	.L41:
 723 00a0 00380240 		.word	1073887232
 724 00a4 00700040 		.word	1073770496
 725              		.cfi_endproc
 726              	.LFE138:
 728              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 729              		.align	2
 730              	.LC3:
 731 0000 25640A00 		.ascii	"%d\012\000"
 732              		.section	.text.main,"ax",%progbits
 733              		.align	1
 734              		.global	main
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
ARM GAS  /tmp/ccfsBKE6.s 			page 38


 739              	main:
 740              	.LFB137:
 105:Core/Src/main.c **** 
 741              		.loc 1 105 1 view -0
 742              		.cfi_startproc
 743              		@ Volatile: function does not return.
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746 0000 08B5     		push	{r3, lr}
 747              	.LCFI25:
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 3, -8
 750              		.cfi_offset 14, -4
 114:Core/Src/main.c **** 
 751              		.loc 1 114 3 view .LVU151
 752 0002 FFF7FEFF 		bl	HAL_Init
 753              	.LVL41:
 121:Core/Src/main.c **** 
 754              		.loc 1 121 3 view .LVU152
 755 0006 FFF7FEFF 		bl	SystemClock_Config
 756              	.LVL42:
 129:Core/Src/main.c ****   MX_DMA_Init();
 757              		.loc 1 129 3 view .LVU153
 758 000a FFF7FEFF 		bl	MX_GPIO_Init
 759              	.LVL43:
 130:Core/Src/main.c ****   MX_I2C1_Init();
 760              		.loc 1 130 3 view .LVU154
 761 000e FFF7FEFF 		bl	MX_DMA_Init
 762              	.LVL44:
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 763              		.loc 1 131 3 view .LVU155
 764 0012 FFF7FEFF 		bl	MX_I2C1_Init
 765              	.LVL45:
 132:Core/Src/main.c ****   MX_I2S1_Init();
 766              		.loc 1 132 3 view .LVU156
 767 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 768              	.LVL46:
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 769              		.loc 1 133 3 view .LVU157
 770 001a FFF7FEFF 		bl	MX_I2S1_Init
 771              	.LVL47:
 135:Core/Src/main.c **** 
 772              		.loc 1 135 3 view .LVU158
 773 001e FFF7FEFF 		bl	RGB_LED_Init
 774              	.LVL48:
 137:Core/Src/main.c ****   ENS160_Init(&ens160,&hi2c1, ENS160_I2C_ADDR_LOW);
 775              		.loc 1 137 3 view .LVU159
 776 0022 174C     		ldr	r4, .L46
 777 0024 C022     		movs	r2, #192
 778 0026 2146     		mov	r1, r4
 779 0028 1648     		ldr	r0, .L46+4
 780 002a FFF7FEFF 		bl	VCNL4040_Init
 781              	.LVL49:
 138:Core/Src/main.c ****   HDC302x_Init(&hdc1, &hi2c1, HDC302x_ADDR_44);
 782              		.loc 1 138 3 view .LVU160
 783 002e A422     		movs	r2, #164
 784 0030 2146     		mov	r1, r4
ARM GAS  /tmp/ccfsBKE6.s 			page 39


 785 0032 1548     		ldr	r0, .L46+8
 786 0034 FFF7FEFF 		bl	ENS160_Init
 787              	.LVL50:
 139:Core/Src/main.c ****   HDC302x_Init(&hdc2, &hi2c1, HDC302x_ADDR_45);
 788              		.loc 1 139 3 view .LVU161
 789 0038 8822     		movs	r2, #136
 790 003a 2146     		mov	r1, r4
 791 003c 1348     		ldr	r0, .L46+12
 792 003e FFF7FEFF 		bl	HDC302x_Init
 793              	.LVL51:
 140:Core/Src/main.c ****   HDC302x_Init(&hdc3, &hi2c1, HDC302x_ADDR_46);
 794              		.loc 1 140 3 view .LVU162
 795 0042 8A22     		movs	r2, #138
 796 0044 2146     		mov	r1, r4
 797 0046 1248     		ldr	r0, .L46+16
 798 0048 FFF7FEFF 		bl	HDC302x_Init
 799              	.LVL52:
 141:Core/Src/main.c ****   HDC302x_Init(&hdc4, &hi2c1, HDC302x_ADDR_47);
 800              		.loc 1 141 3 view .LVU163
 801 004c 8C22     		movs	r2, #140
 802 004e 2146     		mov	r1, r4
 803 0050 1048     		ldr	r0, .L46+20
 804 0052 FFF7FEFF 		bl	HDC302x_Init
 805              	.LVL53:
 142:Core/Src/main.c ****   MIC_Init(&mic, &hi2s1);
 806              		.loc 1 142 3 view .LVU164
 807 0056 8E22     		movs	r2, #142
 808 0058 2146     		mov	r1, r4
 809 005a 0F48     		ldr	r0, .L46+24
 810 005c FFF7FEFF 		bl	HDC302x_Init
 811              	.LVL54:
 143:Core/Src/main.c ****   MIC_Start(&mic);
 812              		.loc 1 143 3 view .LVU165
 813 0060 0E4C     		ldr	r4, .L46+28
 814 0062 0F49     		ldr	r1, .L46+32
 815 0064 2046     		mov	r0, r4
 816 0066 FFF7FEFF 		bl	MIC_Init
 817              	.LVL55:
 144:Core/Src/main.c ****  
 818              		.loc 1 144 3 view .LVU166
 819 006a 2046     		mov	r0, r4
 820 006c FFF7FEFF 		bl	MIC_Start
 821              	.LVL56:
 822              	.L44:
 150:Core/Src/main.c ****   {
 823              		.loc 1 150 3 view .LVU167
 156:Core/Src/main.c ****     Debug_Print("%d\n", mic.audio_result);
 824              		.loc 1 156 5 view .LVU168
 825 0070 FFF7FEFF 		bl	RGB_LED_Blink
 826              	.LVL57:
 157:Core/Src/main.c ****     
 827              		.loc 1 157 5 discriminator 1 view .LVU169
 828 0074 094B     		ldr	r3, .L46+28
 829 0076 5968     		ldr	r1, [r3, #4]
 830 0078 0A48     		ldr	r0, .L46+36
 831 007a FFF7FEFF 		bl	Debug_Print
 832              	.LVL58:
ARM GAS  /tmp/ccfsBKE6.s 			page 40


 150:Core/Src/main.c ****   {
 833              		.loc 1 150 9 view .LVU170
 834 007e F7E7     		b	.L44
 835              	.L47:
 836              		.align	2
 837              	.L46:
 838 0080 00000000 		.word	hi2c1
 839 0084 00000000 		.word	vcnl4040
 840 0088 00000000 		.word	ens160
 841 008c 00000000 		.word	hdc1
 842 0090 00000000 		.word	hdc2
 843 0094 00000000 		.word	hdc3
 844 0098 00000000 		.word	hdc4
 845 009c 00000000 		.word	mic
 846 00a0 00000000 		.word	hi2s1
 847 00a4 00000000 		.word	.LC3
 848              		.cfi_endproc
 849              	.LFE137:
 851              		.global	mic
 852              		.section	.bss.mic,"aw",%nobits
 853              		.align	2
 856              	mic:
 857 0000 00000000 		.space	12
 857      00000000 
 857      00000000 
 858              		.global	hdc4
 859              		.section	.bss.hdc4,"aw",%nobits
 860              		.align	2
 863              	hdc4:
 864 0000 00000000 		.space	8
 864      00000000 
 865              		.global	hdc3
 866              		.section	.bss.hdc3,"aw",%nobits
 867              		.align	2
 870              	hdc3:
 871 0000 00000000 		.space	8
 871      00000000 
 872              		.global	hdc2
 873              		.section	.bss.hdc2,"aw",%nobits
 874              		.align	2
 877              	hdc2:
 878 0000 00000000 		.space	8
 878      00000000 
 879              		.global	hdc1
 880              		.section	.bss.hdc1,"aw",%nobits
 881              		.align	2
 884              	hdc1:
 885 0000 00000000 		.space	8
 885      00000000 
 886              		.global	ens160
 887              		.section	.bss.ens160,"aw",%nobits
 888              		.align	2
 891              	ens160:
 892 0000 00000000 		.space	8
 892      00000000 
 893              		.global	vcnl4040
 894              		.section	.bss.vcnl4040,"aw",%nobits
ARM GAS  /tmp/ccfsBKE6.s 			page 41


 895              		.align	2
 898              	vcnl4040:
 899 0000 00000000 		.space	8
 899      00000000 
 900              		.text
 901              	.Letext0:
 902              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 903              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 904              		.file 5 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h"
 905              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 906              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 907              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 908              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 909              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 910              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 911              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 912              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 913              		.file 14 "Core/Inc/i2c.h"
 914              		.file 15 "Core/Inc/i2s.h"
 915              		.file 16 "Core/Inc/usart.h"
 916              		.file 17 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdarg.h"
 917              		.file 18 "Core/Inc/vcnl4040_sensor.h"
 918              		.file 19 "Core/Inc/ens160_sensor.h"
 919              		.file 20 "Core/Inc/humidity_temp_sensor.h"
 920              		.file 21 "Core/Inc/microphone_sensor.h"
 921              		.file 22 "/usr/include/newlib/string.h"
 922              		.file 23 "/usr/include/newlib/stdio.h"
 923              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 924              		.file 25 "Core/Inc/dma.h"
 925              		.file 26 "Core/Inc/gpio.h"
 926              		.file 27 "<built-in>"
ARM GAS  /tmp/ccfsBKE6.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccfsBKE6.s:21     .text.RGB_LED_Init:00000000 $t
     /tmp/ccfsBKE6.s:27     .text.RGB_LED_Init:00000000 RGB_LED_Init
     /tmp/ccfsBKE6.s:99     .text.RGB_LED_Init:00000048 $d
     /tmp/ccfsBKE6.s:105    .text.RGB_LED_Blink:00000000 $t
     /tmp/ccfsBKE6.s:111    .text.RGB_LED_Blink:00000000 RGB_LED_Blink
     /tmp/ccfsBKE6.s:176    .text.RGB_LED_Blink:00000054 $d
     /tmp/ccfsBKE6.s:181    .text.Debug_Print:00000000 $t
     /tmp/ccfsBKE6.s:187    .text.Debug_Print:00000000 Debug_Print
     /tmp/ccfsBKE6.s:253    .text.Debug_Print:00000034 $d
     /tmp/ccfsBKE6.s:258    .text.Debug_Print_DMA:00000000 $t
     /tmp/ccfsBKE6.s:264    .text.Debug_Print_DMA:00000000 Debug_Print_DMA
     /tmp/ccfsBKE6.s:329    .text.Debug_Print_DMA:00000030 $d
     /tmp/ccfsBKE6.s:334    .text.Send_Raw_Bytes:00000000 $t
     /tmp/ccfsBKE6.s:340    .text.Send_Raw_Bytes:00000000 Send_Raw_Bytes
     /tmp/ccfsBKE6.s:381    .text.Send_Raw_Bytes:00000024 $d
     /tmp/ccfsBKE6.s:386    .text.Send_Buffer_Bytes:00000000 $t
     /tmp/ccfsBKE6.s:392    .text.Send_Buffer_Bytes:00000000 Send_Buffer_Bytes
     /tmp/ccfsBKE6.s:441    .rodata.I2C_Scan.str1.4:00000000 $d
     /tmp/ccfsBKE6.s:451    .text.I2C_Scan:00000000 $t
     /tmp/ccfsBKE6.s:457    .text.I2C_Scan:00000000 I2C_Scan
     /tmp/ccfsBKE6.s:521    .text.I2C_Scan:0000003c $d
     /tmp/ccfsBKE6.s:529    .text.Error_Handler:00000000 $t
     /tmp/ccfsBKE6.s:535    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccfsBKE6.s:567    .text.SystemClock_Config:00000000 $t
     /tmp/ccfsBKE6.s:573    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccfsBKE6.s:723    .text.SystemClock_Config:000000a0 $d
     /tmp/ccfsBKE6.s:729    .rodata.main.str1.4:00000000 $d
     /tmp/ccfsBKE6.s:733    .text.main:00000000 $t
     /tmp/ccfsBKE6.s:739    .text.main:00000000 main
     /tmp/ccfsBKE6.s:838    .text.main:00000080 $d
     /tmp/ccfsBKE6.s:898    .bss.vcnl4040:00000000 vcnl4040
     /tmp/ccfsBKE6.s:891    .bss.ens160:00000000 ens160
     /tmp/ccfsBKE6.s:884    .bss.hdc1:00000000 hdc1
     /tmp/ccfsBKE6.s:877    .bss.hdc2:00000000 hdc2
     /tmp/ccfsBKE6.s:870    .bss.hdc3:00000000 hdc3
     /tmp/ccfsBKE6.s:863    .bss.hdc4:00000000 hdc4
     /tmp/ccfsBKE6.s:856    .bss.mic:00000000 mic
     /tmp/ccfsBKE6.s:853    .bss.mic:00000000 $d
     /tmp/ccfsBKE6.s:860    .bss.hdc4:00000000 $d
     /tmp/ccfsBKE6.s:867    .bss.hdc3:00000000 $d
     /tmp/ccfsBKE6.s:874    .bss.hdc2:00000000 $d
     /tmp/ccfsBKE6.s:881    .bss.hdc1:00000000 $d
     /tmp/ccfsBKE6.s:888    .bss.ens160:00000000 $d
     /tmp/ccfsBKE6.s:895    .bss.vcnl4040:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_Delay
vsnprintf
strlen
HAL_UART_Transmit
huart1
HAL_UART_Transmit_DMA
HAL_I2C_IsDeviceReady
ARM GAS  /tmp/ccfsBKE6.s 			page 43


hi2c1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_I2S1_Init
VCNL4040_Init
ENS160_Init
HDC302x_Init
MIC_Init
MIC_Start
hi2s1
