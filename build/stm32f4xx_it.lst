ARM GAS  /tmp/ccJiHpXU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB134:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** #include "microphone_sensor.h"
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccJiHpXU.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f4xx_it.c **** extern MIC_HandleTypeDef mic;
  63:Core/Src/stm32f4xx_it.c **** extern I2S_HandleTypeDef hi2s1;
  64:Core/Src/stm32f4xx_it.c **** extern uint32_t dma_buffer[4];
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /**
  73:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32f4xx_it.c ****   */
  75:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f4xx_it.c **** 
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /tmp/ccJiHpXU.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 81 4 view .LVU1
  82:Core/Src/stm32f4xx_it.c ****   {
  83:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 83 3 view .LVU2
  81:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 81 10 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE134:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB135:
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c **** }
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c **** /**
  88:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32f4xx_it.c ****   */
  90:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32f4xx_it.c **** 
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 95 3 view .LVU5
  96:Core/Src/stm32f4xx_it.c ****   {
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 99 3 view .LVU6
  95:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 95 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE135:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB136:
 100:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccJiHpXU.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** 
 102:Core/Src/stm32f4xx_it.c **** /**
 103:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32f4xx_it.c ****   */
 105:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f4xx_it.c **** 
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 110 3 view .LVU9
 111:Core/Src/stm32f4xx_it.c ****   {
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 114 3 view .LVU10
 110:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 110 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE136:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB137:
 115:Core/Src/stm32f4xx_it.c **** }
 116:Core/Src/stm32f4xx_it.c **** 
 117:Core/Src/stm32f4xx_it.c **** /**
 118:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 119:Core/Src/stm32f4xx_it.c ****   */
 120:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 125 3 view .LVU13
 126:Core/Src/stm32f4xx_it.c ****   {
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /tmp/ccJiHpXU.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 129 3 view .LVU14
 125:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 125 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE137:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB138:
 130:Core/Src/stm32f4xx_it.c **** }
 131:Core/Src/stm32f4xx_it.c **** 
 132:Core/Src/stm32f4xx_it.c **** /**
 133:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32f4xx_it.c ****   */
 135:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32f4xx_it.c **** 
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 140 3 view .LVU17
 141:Core/Src/stm32f4xx_it.c ****   {
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 144 3 view .LVU18
 140:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 140 9 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE138:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB139:
 145:Core/Src/stm32f4xx_it.c **** }
 146:Core/Src/stm32f4xx_it.c **** 
 147:Core/Src/stm32f4xx_it.c **** /**
 148:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccJiHpXU.s 			page 6


 149:Core/Src/stm32f4xx_it.c ****   */
 150:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 151:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:Core/Src/stm32f4xx_it.c **** 
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE139:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB140:
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c **** /**
 161:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 162:Core/Src/stm32f4xx_it.c ****   */
 163:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 164:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 164 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 165:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:Core/Src/stm32f4xx_it.c **** 
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 171 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE140:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB141:
ARM GAS  /tmp/ccJiHpXU.s 			page 7


 172:Core/Src/stm32f4xx_it.c **** 
 173:Core/Src/stm32f4xx_it.c **** /**
 174:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:Core/Src/stm32f4xx_it.c ****   */
 176:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 177:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 177 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 184 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE141:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB142:
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c **** /**
 187:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 188:Core/Src/stm32f4xx_it.c ****   */
 189:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 190:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 190 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 194 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** }
 213              		.loc 1 198 1 is_stmt 0 view .LVU28
ARM GAS  /tmp/ccJiHpXU.s 			page 8


 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE142:
 218              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA2_Stream0_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA2_Stream0_IRQHandler:
 226              	.LFB143:
 199:Core/Src/stm32f4xx_it.c **** 
 200:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 202:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 203:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 204:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 205:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c **** /**
 208:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 209:Core/Src/stm32f4xx_it.c ****   */
 210:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 211:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 211 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 212:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 213:Core/Src/stm32f4xx_it.c **** 
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 236              		.loc 1 215 3 view .LVU30
 237 0002 0248     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL1:
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** }
 240              		.loc 1 219 1 is_stmt 0 view .LVU31
 241 0008 08BD     		pop	{r3, pc}
 242              	.L19:
 243 000a 00BF     		.align	2
 244              	.L18:
 245 000c 00000000 		.word	hdma_spi1_rx
 246              		.cfi_endproc
 247              	.LFE143:
 249              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	OTG_FS_IRQHandler
 252              		.syntax unified
ARM GAS  /tmp/ccJiHpXU.s 			page 9


 253              		.thumb
 254              		.thumb_func
 256              	OTG_FS_IRQHandler:
 257              	.LFB144:
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c **** /**
 222:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 223:Core/Src/stm32f4xx_it.c ****   */
 224:Core/Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 225:Core/Src/stm32f4xx_it.c **** {
 258              		.loc 1 225 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 226:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 227:Core/Src/stm32f4xx_it.c **** 
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 267              		.loc 1 229 3 view .LVU33
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 270              	.LVL2:
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** }
 271              		.loc 1 233 1 is_stmt 0 view .LVU34
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	hpcd_USB_OTG_FS
 277              		.cfi_endproc
 278              	.LFE144:
 280              		.section	.text.HAL_I2S_RxHalfCpltCallback,"ax",%progbits
 281              		.align	1
 282              		.global	HAL_I2S_RxHalfCpltCallback
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	HAL_I2S_RxHalfCpltCallback:
 288              	.LVL3:
 289              	.LFB145:
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 1 */
 236:Core/Src/stm32f4xx_it.c **** void HAL_I2S_RxHalfCpltCallback(I2S_HandleTypeDef *hi2s)
 237:Core/Src/stm32f4xx_it.c **** {
 290              		.loc 1 237 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
ARM GAS  /tmp/ccJiHpXU.s 			page 10


 238:Core/Src/stm32f4xx_it.c ****   if (hi2s == &hi2s1)
 295              		.loc 1 238 3 view .LVU36
 296              		.loc 1 238 6 is_stmt 0 view .LVU37
 297 0000 0B4B     		ldr	r3, .L29
 298 0002 8342     		cmp	r3, r0
 299 0004 00D0     		beq	.L28
 300              	.L24:
 239:Core/Src/stm32f4xx_it.c ****   {
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****     // static uint16_t cb_cnt = 0;
 242:Core/Src/stm32f4xx_it.c ****     // cb_cnt++; // 回调次数计数
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****     uint32_t val = (dma_buffer[0]<<8) + (dma_buffer[1]>>8);
 245:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 246:Core/Src/stm32f4xx_it.c ****       mic.audio_result = val | 0xFF000000; // 符号扩展
 247:Core/Src/stm32f4xx_it.c ****     else
 248:Core/Src/stm32f4xx_it.c ****       mic.audio_result = val;
 249:Core/Src/stm32f4xx_it.c **** 
 250:Core/Src/stm32f4xx_it.c ****     mic.half_ready = 1;
 251:Core/Src/stm32f4xx_it.c **** 
 252:Core/Src/stm32f4xx_it.c ****     // if (cb_cnt % 10 == 0)
 253:Core/Src/stm32f4xx_it.c ****     //   Debug_Print("%d\n", mic.audio_buffer[0]);
 254:Core/Src/stm32f4xx_it.c ****   }
 255:Core/Src/stm32f4xx_it.c **** }
 301              		.loc 1 255 1 view .LVU38
 302 0006 7047     		bx	lr
 303              	.L28:
 304              	.LBB2:
 244:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 305              		.loc 1 244 5 is_stmt 1 view .LVU39
 244:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 306              		.loc 1 244 31 is_stmt 0 view .LVU40
 307 0008 0A4B     		ldr	r3, .L29+4
 308 000a 1A68     		ldr	r2, [r3]
 244:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 309              		.loc 1 244 52 view .LVU41
 310 000c 5B68     		ldr	r3, [r3, #4]
 244:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 311              		.loc 1 244 55 view .LVU42
 312 000e 1B0A     		lsrs	r3, r3, #8
 244:Core/Src/stm32f4xx_it.c ****     if (val & 0x800000)
 313              		.loc 1 244 14 view .LVU43
 314 0010 03EB0223 		add	r3, r3, r2, lsl #8
 315              	.LVL4:
 245:Core/Src/stm32f4xx_it.c ****       mic.audio_result = val | 0xFF000000; // 符号扩展
 316              		.loc 1 245 5 is_stmt 1 view .LVU44
 245:Core/Src/stm32f4xx_it.c ****       mic.audio_result = val | 0xFF000000; // 符号扩展
 317              		.loc 1 245 8 is_stmt 0 view .LVU45
 318 0014 13F4000F 		tst	r3, #8388608
 319 0018 07D0     		beq	.L26
 246:Core/Src/stm32f4xx_it.c ****     else
 320              		.loc 1 246 7 is_stmt 1 view .LVU46
 246:Core/Src/stm32f4xx_it.c ****     else
 321              		.loc 1 246 30 is_stmt 0 view .LVU47
 322 001a 43F07F43 		orr	r3, r3, #-16777216
 323              	.LVL5:
 246:Core/Src/stm32f4xx_it.c ****     else
ARM GAS  /tmp/ccJiHpXU.s 			page 11


 324              		.loc 1 246 24 view .LVU48
 325 001e 064A     		ldr	r2, .L29+8
 326              	.LVL6:
 246:Core/Src/stm32f4xx_it.c ****     else
 327              		.loc 1 246 24 view .LVU49
 328 0020 5360     		str	r3, [r2, #4]
 329              	.L27:
 250:Core/Src/stm32f4xx_it.c **** 
 330              		.loc 1 250 5 is_stmt 1 view .LVU50
 250:Core/Src/stm32f4xx_it.c **** 
 331              		.loc 1 250 20 is_stmt 0 view .LVU51
 332 0022 054B     		ldr	r3, .L29+8
 333 0024 0122     		movs	r2, #1
 334 0026 1A72     		strb	r2, [r3, #8]
 335              	.LBE2:
 336              		.loc 1 255 1 view .LVU52
 337 0028 EDE7     		b	.L24
 338              	.LVL7:
 339              	.L26:
 340              	.LBB3:
 248:Core/Src/stm32f4xx_it.c **** 
 341              		.loc 1 248 7 is_stmt 1 view .LVU53
 248:Core/Src/stm32f4xx_it.c **** 
 342              		.loc 1 248 24 is_stmt 0 view .LVU54
 343 002a 034A     		ldr	r2, .L29+8
 344 002c 5360     		str	r3, [r2, #4]
 345 002e F8E7     		b	.L27
 346              	.L30:
 347              		.align	2
 348              	.L29:
 349 0030 00000000 		.word	hi2s1
 350 0034 00000000 		.word	dma_buffer
 351 0038 00000000 		.word	mic
 352              	.LBE3:
 353              		.cfi_endproc
 354              	.LFE145:
 356              		.section	.text.HAL_I2S_RxCpltCallback,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_I2S_RxCpltCallback
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	HAL_I2S_RxCpltCallback:
 364              	.LVL8:
 365              	.LFB146:
 256:Core/Src/stm32f4xx_it.c **** 
 257:Core/Src/stm32f4xx_it.c **** void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s)
 258:Core/Src/stm32f4xx_it.c **** {
 366              		.loc 1 258 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 259:Core/Src/stm32f4xx_it.c ****   if (hi2s == &hi2s1)
 371              		.loc 1 259 3 view .LVU56
 372              		.loc 1 259 6 is_stmt 0 view .LVU57
 373 0000 034B     		ldr	r3, .L34
ARM GAS  /tmp/ccJiHpXU.s 			page 12


 374 0002 8342     		cmp	r3, r0
 375 0004 00D0     		beq	.L33
 376              	.L31:
 260:Core/Src/stm32f4xx_it.c ****   {
 261:Core/Src/stm32f4xx_it.c ****     mic.full_ready = 1;
 262:Core/Src/stm32f4xx_it.c ****   }
 263:Core/Src/stm32f4xx_it.c **** }
 377              		.loc 1 263 1 view .LVU58
 378 0006 7047     		bx	lr
 379              	.L33:
 261:Core/Src/stm32f4xx_it.c ****   }
 380              		.loc 1 261 5 is_stmt 1 view .LVU59
 261:Core/Src/stm32f4xx_it.c ****   }
 381              		.loc 1 261 20 is_stmt 0 view .LVU60
 382 0008 024B     		ldr	r3, .L34+4
 383 000a 0122     		movs	r2, #1
 384 000c 5A72     		strb	r2, [r3, #9]
 385              		.loc 1 263 1 view .LVU61
 386 000e FAE7     		b	.L31
 387              	.L35:
 388              		.align	2
 389              	.L34:
 390 0010 00000000 		.word	hi2s1
 391 0014 00000000 		.word	mic
 392              		.cfi_endproc
 393              	.LFE146:
 395              		.text
 396              	.Letext0:
 397              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 398              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 399              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 400              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 401              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 402              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 403              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 404              		.file 9 "Core/Inc/microphone_sensor.h"
 405              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccJiHpXU.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
     /tmp/ccJiHpXU.s:21     .text.NMI_Handler:00000000 $t
     /tmp/ccJiHpXU.s:27     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccJiHpXU.s:44     .text.HardFault_Handler:00000000 $t
     /tmp/ccJiHpXU.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccJiHpXU.s:67     .text.MemManage_Handler:00000000 $t
     /tmp/ccJiHpXU.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccJiHpXU.s:90     .text.BusFault_Handler:00000000 $t
     /tmp/ccJiHpXU.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccJiHpXU.s:113    .text.UsageFault_Handler:00000000 $t
     /tmp/ccJiHpXU.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccJiHpXU.s:136    .text.SVC_Handler:00000000 $t
     /tmp/ccJiHpXU.s:142    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccJiHpXU.s:155    .text.DebugMon_Handler:00000000 $t
     /tmp/ccJiHpXU.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccJiHpXU.s:174    .text.PendSV_Handler:00000000 $t
     /tmp/ccJiHpXU.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccJiHpXU.s:193    .text.SysTick_Handler:00000000 $t
     /tmp/ccJiHpXU.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccJiHpXU.s:219    .text.DMA2_Stream0_IRQHandler:00000000 $t
     /tmp/ccJiHpXU.s:225    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
     /tmp/ccJiHpXU.s:245    .text.DMA2_Stream0_IRQHandler:0000000c $d
     /tmp/ccJiHpXU.s:250    .text.OTG_FS_IRQHandler:00000000 $t
     /tmp/ccJiHpXU.s:256    .text.OTG_FS_IRQHandler:00000000 OTG_FS_IRQHandler
     /tmp/ccJiHpXU.s:276    .text.OTG_FS_IRQHandler:0000000c $d
     /tmp/ccJiHpXU.s:281    .text.HAL_I2S_RxHalfCpltCallback:00000000 $t
     /tmp/ccJiHpXU.s:287    .text.HAL_I2S_RxHalfCpltCallback:00000000 HAL_I2S_RxHalfCpltCallback
     /tmp/ccJiHpXU.s:349    .text.HAL_I2S_RxHalfCpltCallback:00000030 $d
     /tmp/ccJiHpXU.s:357    .text.HAL_I2S_RxCpltCallback:00000000 $t
     /tmp/ccJiHpXU.s:363    .text.HAL_I2S_RxCpltCallback:00000000 HAL_I2S_RxCpltCallback
     /tmp/ccJiHpXU.s:390    .text.HAL_I2S_RxCpltCallback:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi1_rx
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
hi2s1
dma_buffer
mic
